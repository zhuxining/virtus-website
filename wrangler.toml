# wrangler.toml

# Replace with your desired worker name (must be unique within your account)

name = "han-stack"

# Entry point for your worker, generated by the build process

main = ".output/server/index.mjs"

# Enable Node.js compatibility APIs if your app or dependencies need them

compatibility_flags = ["nodejs_compat"]


# Use a recent compatibility date

compatibility_date = "2024-09-19" # Or a later date

# Example: Serve static assets built by Vinxi/Vite

# The binding name "ASSETS" must match how you reference it in your server code (if needed)

# Check Vinxi/Nitro Cloudflare preset docs for asset handling specifics.

# assets = { directory = "./.output/public/", binding = "ASSETS" }


# Example: Route traffic from your custom domain to this worker

# routes = [{ pattern = "your-domain.com", custom_domain = true }]


# Define bindings for Cloudflare resources (KV, R2, D1, etc.)

# These names must match the variable names used in your Worker code


[[kv_namespaces]]

binding = "YOUR_KV_BINDING_NAME" # e.g., SESSION_KV

id = "your_kv_namespace_id" # Find in Cloudflare Dashboard


[[r2_buckets]]

binding = "PROFILE_BUCKET" # e.g., USER_PROFILES_BUCKET

bucket_name = "user-profiles" # Your R2 bucket name

# Add other bindings (D1 databases, Queues, etc.) as needed


# [vars] section is NOT used for secrets during deployment with this GitHub Action setup.

# Secrets are injected securely via the workflow.

# Use a separate `.dev.vars` file for local development secrets.


[observability]

# Optional: Enable observability features if needed

enabled = true
