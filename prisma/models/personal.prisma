model Essay {
  id        Int          @id @default(autoincrement())
  title     String
  banner    String?
  content   String
  author    User         @relation(fields: [authorId], references: [id])
  authorId  String
  status    EssayStatus  @default(DRAFT)
  audit     EssayAudit[]
  EssayLike EssayLike[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  @@map("essay")
}

model EssayAudit {
  id          Int         @id @default(autoincrement())
  essay       Essay       @relation(fields: [essayId], references: [id])
  essayId     Int
  auditStatus AuditStatus @default(PENDING)
  auditMsg    String?
  operator    User        @relation(fields: [operatorId], references: [id])
  operatorId  String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("essay_audit")
}

model EssayLike {
  id         Int      @id @default(autoincrement())
  essay      Essay    @relation(fields: [essayId], references: [id])
  essayId    Int
  operator   User     @relation(fields: [operatorId], references: [id])
  operatorId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("essay_like")
}

model EssayStatistics {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("essay_statistics")
}

enum EssayStatus {
  DRAFT
  PENDING_REVIEW
  PUBLISHED
  REJECTED
}

enum AuditStatus {
  PENDING
  APPROVED
  REJECTED
}
