/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminConsoleRouteImport } from './routes/_admin-console/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as AdminConsoleIndexImport } from './routes/_admin-console/index'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as AdminConsoleSettingsRouteImport } from './routes/_admin-console/settings/route'
import { Route as AdminConsoleUsersIndexImport } from './routes/_admin-console/users/index'
import { Route as AdminConsoleTasksIndexImport } from './routes/_admin-console/tasks/index'
import { Route as AdminConsoleSettingsIndexImport } from './routes/_admin-console/settings/index'
import { Route as AdminConsoleHelpCenterIndexImport } from './routes/_admin-console/help-center/index'
import { Route as AdminConsoleChatsIndexImport } from './routes/_admin-console/chats/index'
import { Route as AdminConsoleAppsIndexImport } from './routes/_admin-console/apps/index'
import { Route as authSignUpIndexImport } from './routes/(auth)/sign-up/index'
import { Route as authSignInIndexImport } from './routes/(auth)/sign-in/index'
import { Route as authOtpIndexImport } from './routes/(auth)/otp/index'
import { Route as authForgotPasswordIndexImport } from './routes/(auth)/forgot-password/index'
import { Route as AdminConsoleSettingsNotificationsImport } from './routes/_admin-console/settings/notifications'
import { Route as AdminConsoleSettingsDisplayImport } from './routes/_admin-console/settings/display'
import { Route as AdminConsoleSettingsAppearanceImport } from './routes/_admin-console/settings/appearance'
import { Route as AdminConsoleSettingsAccountImport } from './routes/_admin-console/settings/account'

// Create/Update Routes

const AdminConsoleRouteRoute = AdminConsoleRouteImport.update({
  id: '/_admin-console',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AdminConsoleIndexRoute = AdminConsoleIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const AdminConsoleSettingsRouteRoute = AdminConsoleSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)

const AdminConsoleUsersIndexRoute = AdminConsoleUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)

const AdminConsoleTasksIndexRoute = AdminConsoleTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)

const AdminConsoleSettingsIndexRoute = AdminConsoleSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminConsoleSettingsRouteRoute,
} as any)

const AdminConsoleHelpCenterIndexRoute =
  AdminConsoleHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AdminConsoleRouteRoute,
  } as any)

const AdminConsoleChatsIndexRoute = AdminConsoleChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)

const AdminConsoleAppsIndexRoute = AdminConsoleAppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)

const authSignUpIndexRoute = authSignUpIndexImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => authRouteRoute,
} as any)

const authSignInIndexRoute = authSignInIndexImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => authRouteRoute,
} as any)

const authOtpIndexRoute = authOtpIndexImport.update({
  id: '/otp/',
  path: '/otp/',
  getParentRoute: () => authRouteRoute,
} as any)

const authForgotPasswordIndexRoute = authForgotPasswordIndexImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => authRouteRoute,
} as any)

const AdminConsoleSettingsNotificationsRoute =
  AdminConsoleSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)

const AdminConsoleSettingsDisplayRoute =
  AdminConsoleSettingsDisplayImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)

const AdminConsoleSettingsAppearanceRoute =
  AdminConsoleSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)

const AdminConsoleSettingsAccountRoute =
  AdminConsoleSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_admin-console': {
      id: '/_admin-console'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminConsoleRouteImport
      parentRoute: typeof rootRoute
    }
    '/_admin-console/settings': {
      id: '/_admin-console/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AdminConsoleSettingsRouteImport
      parentRoute: typeof AdminConsoleRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_admin-console/': {
      id: '/_admin-console/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AdminConsoleIndexImport
      parentRoute: typeof AdminConsoleRouteImport
    }
    '/_admin-console/settings/account': {
      id: '/_admin-console/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AdminConsoleSettingsAccountImport
      parentRoute: typeof AdminConsoleSettingsRouteImport
    }
    '/_admin-console/settings/appearance': {
      id: '/_admin-console/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AdminConsoleSettingsAppearanceImport
      parentRoute: typeof AdminConsoleSettingsRouteImport
    }
    '/_admin-console/settings/display': {
      id: '/_admin-console/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AdminConsoleSettingsDisplayImport
      parentRoute: typeof AdminConsoleSettingsRouteImport
    }
    '/_admin-console/settings/notifications': {
      id: '/_admin-console/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AdminConsoleSettingsNotificationsImport
      parentRoute: typeof AdminConsoleSettingsRouteImport
    }
    '/(auth)/forgot-password/': {
      id: '/(auth)/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordIndexImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/otp/': {
      id: '/(auth)/otp/'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpIndexImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-in/': {
      id: '/(auth)/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInIndexImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-up/': {
      id: '/(auth)/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpIndexImport
      parentRoute: typeof authRouteImport
    }
    '/_admin-console/apps/': {
      id: '/_admin-console/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AdminConsoleAppsIndexImport
      parentRoute: typeof AdminConsoleRouteImport
    }
    '/_admin-console/chats/': {
      id: '/_admin-console/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AdminConsoleChatsIndexImport
      parentRoute: typeof AdminConsoleRouteImport
    }
    '/_admin-console/help-center/': {
      id: '/_admin-console/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AdminConsoleHelpCenterIndexImport
      parentRoute: typeof AdminConsoleRouteImport
    }
    '/_admin-console/settings/': {
      id: '/_admin-console/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AdminConsoleSettingsIndexImport
      parentRoute: typeof AdminConsoleSettingsRouteImport
    }
    '/_admin-console/tasks/': {
      id: '/_admin-console/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AdminConsoleTasksIndexImport
      parentRoute: typeof AdminConsoleRouteImport
    }
    '/_admin-console/users/': {
      id: '/_admin-console/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AdminConsoleUsersIndexImport
      parentRoute: typeof AdminConsoleRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authForgotPasswordIndexRoute: typeof authForgotPasswordIndexRoute
  authOtpIndexRoute: typeof authOtpIndexRoute
  authSignInIndexRoute: typeof authSignInIndexRoute
  authSignUpIndexRoute: typeof authSignUpIndexRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordIndexRoute: authForgotPasswordIndexRoute,
  authOtpIndexRoute: authOtpIndexRoute,
  authSignInIndexRoute: authSignInIndexRoute,
  authSignUpIndexRoute: authSignUpIndexRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AdminConsoleSettingsRouteRouteChildren {
  AdminConsoleSettingsAccountRoute: typeof AdminConsoleSettingsAccountRoute
  AdminConsoleSettingsAppearanceRoute: typeof AdminConsoleSettingsAppearanceRoute
  AdminConsoleSettingsDisplayRoute: typeof AdminConsoleSettingsDisplayRoute
  AdminConsoleSettingsNotificationsRoute: typeof AdminConsoleSettingsNotificationsRoute
  AdminConsoleSettingsIndexRoute: typeof AdminConsoleSettingsIndexRoute
}

const AdminConsoleSettingsRouteRouteChildren: AdminConsoleSettingsRouteRouteChildren =
  {
    AdminConsoleSettingsAccountRoute: AdminConsoleSettingsAccountRoute,
    AdminConsoleSettingsAppearanceRoute: AdminConsoleSettingsAppearanceRoute,
    AdminConsoleSettingsDisplayRoute: AdminConsoleSettingsDisplayRoute,
    AdminConsoleSettingsNotificationsRoute:
      AdminConsoleSettingsNotificationsRoute,
    AdminConsoleSettingsIndexRoute: AdminConsoleSettingsIndexRoute,
  }

const AdminConsoleSettingsRouteRouteWithChildren =
  AdminConsoleSettingsRouteRoute._addFileChildren(
    AdminConsoleSettingsRouteRouteChildren,
  )

interface AdminConsoleRouteRouteChildren {
  AdminConsoleSettingsRouteRoute: typeof AdminConsoleSettingsRouteRouteWithChildren
  AdminConsoleIndexRoute: typeof AdminConsoleIndexRoute
  AdminConsoleAppsIndexRoute: typeof AdminConsoleAppsIndexRoute
  AdminConsoleChatsIndexRoute: typeof AdminConsoleChatsIndexRoute
  AdminConsoleHelpCenterIndexRoute: typeof AdminConsoleHelpCenterIndexRoute
  AdminConsoleTasksIndexRoute: typeof AdminConsoleTasksIndexRoute
  AdminConsoleUsersIndexRoute: typeof AdminConsoleUsersIndexRoute
}

const AdminConsoleRouteRouteChildren: AdminConsoleRouteRouteChildren = {
  AdminConsoleSettingsRouteRoute: AdminConsoleSettingsRouteRouteWithChildren,
  AdminConsoleIndexRoute: AdminConsoleIndexRoute,
  AdminConsoleAppsIndexRoute: AdminConsoleAppsIndexRoute,
  AdminConsoleChatsIndexRoute: AdminConsoleChatsIndexRoute,
  AdminConsoleHelpCenterIndexRoute: AdminConsoleHelpCenterIndexRoute,
  AdminConsoleTasksIndexRoute: AdminConsoleTasksIndexRoute,
  AdminConsoleUsersIndexRoute: AdminConsoleUsersIndexRoute,
}

const AdminConsoleRouteRouteWithChildren =
  AdminConsoleRouteRoute._addFileChildren(AdminConsoleRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof AdminConsoleIndexRoute
  '': typeof AdminConsoleRouteRouteWithChildren
  '/settings': typeof AdminConsoleSettingsRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/account': typeof AdminConsoleSettingsAccountRoute
  '/settings/appearance': typeof AdminConsoleSettingsAppearanceRoute
  '/settings/display': typeof AdminConsoleSettingsDisplayRoute
  '/settings/notifications': typeof AdminConsoleSettingsNotificationsRoute
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/otp': typeof authOtpIndexRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/apps': typeof AdminConsoleAppsIndexRoute
  '/chats': typeof AdminConsoleChatsIndexRoute
  '/help-center': typeof AdminConsoleHelpCenterIndexRoute
  '/settings/': typeof AdminConsoleSettingsIndexRoute
  '/tasks': typeof AdminConsoleTasksIndexRoute
  '/users': typeof AdminConsoleUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AdminConsoleIndexRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/account': typeof AdminConsoleSettingsAccountRoute
  '/settings/appearance': typeof AdminConsoleSettingsAppearanceRoute
  '/settings/display': typeof AdminConsoleSettingsDisplayRoute
  '/settings/notifications': typeof AdminConsoleSettingsNotificationsRoute
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/otp': typeof authOtpIndexRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/apps': typeof AdminConsoleAppsIndexRoute
  '/chats': typeof AdminConsoleChatsIndexRoute
  '/help-center': typeof AdminConsoleHelpCenterIndexRoute
  '/settings': typeof AdminConsoleSettingsIndexRoute
  '/tasks': typeof AdminConsoleTasksIndexRoute
  '/users': typeof AdminConsoleUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_admin-console': typeof AdminConsoleRouteRouteWithChildren
  '/_admin-console/settings': typeof AdminConsoleSettingsRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_admin-console/': typeof AdminConsoleIndexRoute
  '/_admin-console/settings/account': typeof AdminConsoleSettingsAccountRoute
  '/_admin-console/settings/appearance': typeof AdminConsoleSettingsAppearanceRoute
  '/_admin-console/settings/display': typeof AdminConsoleSettingsDisplayRoute
  '/_admin-console/settings/notifications': typeof AdminConsoleSettingsNotificationsRoute
  '/(auth)/forgot-password/': typeof authForgotPasswordIndexRoute
  '/(auth)/otp/': typeof authOtpIndexRoute
  '/(auth)/sign-in/': typeof authSignInIndexRoute
  '/(auth)/sign-up/': typeof authSignUpIndexRoute
  '/_admin-console/apps/': typeof AdminConsoleAppsIndexRoute
  '/_admin-console/chats/': typeof AdminConsoleChatsIndexRoute
  '/_admin-console/help-center/': typeof AdminConsoleHelpCenterIndexRoute
  '/_admin-console/settings/': typeof AdminConsoleSettingsIndexRoute
  '/_admin-console/tasks/': typeof AdminConsoleTasksIndexRoute
  '/_admin-console/users/': typeof AdminConsoleUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/settings'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/users'
  id:
    | '__root__'
    | '/(auth)'
    | '/_admin-console'
    | '/_admin-console/settings'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_admin-console/'
    | '/_admin-console/settings/account'
    | '/_admin-console/settings/appearance'
    | '/_admin-console/settings/display'
    | '/_admin-console/settings/notifications'
    | '/(auth)/forgot-password/'
    | '/(auth)/otp/'
    | '/(auth)/sign-in/'
    | '/(auth)/sign-up/'
    | '/_admin-console/apps/'
    | '/_admin-console/chats/'
    | '/_admin-console/help-center/'
    | '/_admin-console/settings/'
    | '/_admin-console/tasks/'
    | '/_admin-console/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AdminConsoleRouteRoute: typeof AdminConsoleRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AdminConsoleRouteRoute: AdminConsoleRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/_admin-console",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/forgot-password/",
        "/(auth)/otp/",
        "/(auth)/sign-in/",
        "/(auth)/sign-up/"
      ]
    },
    "/_admin-console": {
      "filePath": "_admin-console/route.tsx",
      "children": [
        "/_admin-console/settings",
        "/_admin-console/",
        "/_admin-console/apps/",
        "/_admin-console/chats/",
        "/_admin-console/help-center/",
        "/_admin-console/tasks/",
        "/_admin-console/users/"
      ]
    },
    "/_admin-console/settings": {
      "filePath": "_admin-console/settings/route.tsx",
      "parent": "/_admin-console",
      "children": [
        "/_admin-console/settings/account",
        "/_admin-console/settings/appearance",
        "/_admin-console/settings/display",
        "/_admin-console/settings/notifications",
        "/_admin-console/settings/"
      ]
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_admin-console/": {
      "filePath": "_admin-console/index.tsx",
      "parent": "/_admin-console"
    },
    "/_admin-console/settings/account": {
      "filePath": "_admin-console/settings/account.tsx",
      "parent": "/_admin-console/settings"
    },
    "/_admin-console/settings/appearance": {
      "filePath": "_admin-console/settings/appearance.tsx",
      "parent": "/_admin-console/settings"
    },
    "/_admin-console/settings/display": {
      "filePath": "_admin-console/settings/display.tsx",
      "parent": "/_admin-console/settings"
    },
    "/_admin-console/settings/notifications": {
      "filePath": "_admin-console/settings/notifications.tsx",
      "parent": "/_admin-console/settings"
    },
    "/(auth)/forgot-password/": {
      "filePath": "(auth)/forgot-password/index.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/otp/": {
      "filePath": "(auth)/otp/index.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-in/": {
      "filePath": "(auth)/sign-in/index.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-up/": {
      "filePath": "(auth)/sign-up/index.tsx",
      "parent": "/(auth)"
    },
    "/_admin-console/apps/": {
      "filePath": "_admin-console/apps/index.tsx",
      "parent": "/_admin-console"
    },
    "/_admin-console/chats/": {
      "filePath": "_admin-console/chats/index.tsx",
      "parent": "/_admin-console"
    },
    "/_admin-console/help-center/": {
      "filePath": "_admin-console/help-center/index.tsx",
      "parent": "/_admin-console"
    },
    "/_admin-console/settings/": {
      "filePath": "_admin-console/settings/index.tsx",
      "parent": "/_admin-console/settings"
    },
    "/_admin-console/tasks/": {
      "filePath": "_admin-console/tasks/index.tsx",
      "parent": "/_admin-console"
    },
    "/_admin-console/users/": {
      "filePath": "_admin-console/users/index.tsx",
      "parent": "/_admin-console"
    }
  }
}
ROUTE_MANIFEST_END */
