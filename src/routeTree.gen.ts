/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as WebsiteRouteRouteImport } from './routes/_website/route'
import { Route as AdminConsoleRouteRouteImport } from './routes/_admin-console/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as WebsiteIndexRouteImport } from './routes/_website/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as AdminConsoleSettingsRouteRouteImport } from './routes/_admin-console/settings/route'
import { Route as WebsiteEventIndexRouteImport } from './routes/_website/event/index'
import { Route as WebsiteDreamIndexRouteImport } from './routes/_website/dream/index'
import { Route as WebsiteDonationIndexRouteImport } from './routes/_website/donation/index'
import { Route as WebsiteBlogIndexRouteImport } from './routes/_website/blog/index'
import { Route as WebsiteAboutIndexRouteImport } from './routes/_website/about/index'
import { Route as AdminConsoleUsersIndexRouteImport } from './routes/_admin-console/users/index'
import { Route as AdminConsoleTasksIndexRouteImport } from './routes/_admin-console/tasks/index'
import { Route as AdminConsoleSettingsIndexRouteImport } from './routes/_admin-console/settings/index'
import { Route as AdminConsoleHelpCenterIndexRouteImport } from './routes/_admin-console/help-center/index'
import { Route as AdminConsoleDashboardIndexRouteImport } from './routes/_admin-console/dashboard/index'
import { Route as AdminConsoleChatsIndexRouteImport } from './routes/_admin-console/chats/index'
import { Route as AdminConsoleAppsIndexRouteImport } from './routes/_admin-console/apps/index'
import { Route as authSignUpIndexRouteImport } from './routes/(auth)/sign-up/index'
import { Route as authSignInIndexRouteImport } from './routes/(auth)/sign-in/index'
import { Route as AdminConsoleSettingsNotificationsRouteImport } from './routes/_admin-console/settings/notifications'
import { Route as AdminConsoleSettingsDisplayRouteImport } from './routes/_admin-console/settings/display'
import { Route as AdminConsoleSettingsAppearanceRouteImport } from './routes/_admin-console/settings/appearance'
import { Route as AdminConsoleSettingsAccountRouteImport } from './routes/_admin-console/settings/account'
import { ServerRoute as ApiWechatWorkCodeServerRouteImport } from './routes/api/wechat-work-code'
import { ServerRoute as ApiRpcSplatServerRouteImport } from './routes/api/rpc.$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const WebsiteRouteRoute = WebsiteRouteRouteImport.update({
  id: '/_website',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminConsoleRouteRoute = AdminConsoleRouteRouteImport.update({
  id: '/_admin-console',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const WebsiteIndexRoute = WebsiteIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WebsiteRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminConsoleSettingsRouteRoute =
  AdminConsoleSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AdminConsoleRouteRoute,
  } as any)
const WebsiteEventIndexRoute = WebsiteEventIndexRouteImport.update({
  id: '/event/',
  path: '/event/',
  getParentRoute: () => WebsiteRouteRoute,
} as any)
const WebsiteDreamIndexRoute = WebsiteDreamIndexRouteImport.update({
  id: '/dream/',
  path: '/dream/',
  getParentRoute: () => WebsiteRouteRoute,
} as any)
const WebsiteDonationIndexRoute = WebsiteDonationIndexRouteImport.update({
  id: '/donation/',
  path: '/donation/',
  getParentRoute: () => WebsiteRouteRoute,
} as any)
const WebsiteBlogIndexRoute = WebsiteBlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => WebsiteRouteRoute,
} as any)
const WebsiteAboutIndexRoute = WebsiteAboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => WebsiteRouteRoute,
} as any)
const AdminConsoleUsersIndexRoute = AdminConsoleUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)
const AdminConsoleTasksIndexRoute = AdminConsoleTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)
const AdminConsoleSettingsIndexRoute =
  AdminConsoleSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)
const AdminConsoleHelpCenterIndexRoute =
  AdminConsoleHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AdminConsoleRouteRoute,
  } as any)
const AdminConsoleDashboardIndexRoute =
  AdminConsoleDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AdminConsoleRouteRoute,
  } as any)
const AdminConsoleChatsIndexRoute = AdminConsoleChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)
const AdminConsoleAppsIndexRoute = AdminConsoleAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AdminConsoleRouteRoute,
} as any)
const authSignUpIndexRoute = authSignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => authRouteRoute,
} as any)
const authSignInIndexRoute = authSignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => authRouteRoute,
} as any)
const AdminConsoleSettingsNotificationsRoute =
  AdminConsoleSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)
const AdminConsoleSettingsDisplayRoute =
  AdminConsoleSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)
const AdminConsoleSettingsAppearanceRoute =
  AdminConsoleSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)
const AdminConsoleSettingsAccountRoute =
  AdminConsoleSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AdminConsoleSettingsRouteRoute,
  } as any)
const ApiWechatWorkCodeServerRoute = ApiWechatWorkCodeServerRouteImport.update({
  id: '/api/wechat-work-code',
  path: '/api/wechat-work-code',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRpcSplatServerRoute = ApiRpcSplatServerRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof WebsiteIndexRoute
  '': typeof WebsiteRouteRouteWithChildren
  '/settings': typeof AdminConsoleSettingsRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/account': typeof AdminConsoleSettingsAccountRoute
  '/settings/appearance': typeof AdminConsoleSettingsAppearanceRoute
  '/settings/display': typeof AdminConsoleSettingsDisplayRoute
  '/settings/notifications': typeof AdminConsoleSettingsNotificationsRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/apps': typeof AdminConsoleAppsIndexRoute
  '/chats': typeof AdminConsoleChatsIndexRoute
  '/dashboard': typeof AdminConsoleDashboardIndexRoute
  '/help-center': typeof AdminConsoleHelpCenterIndexRoute
  '/settings/': typeof AdminConsoleSettingsIndexRoute
  '/tasks': typeof AdminConsoleTasksIndexRoute
  '/users': typeof AdminConsoleUsersIndexRoute
  '/about': typeof WebsiteAboutIndexRoute
  '/blog': typeof WebsiteBlogIndexRoute
  '/donation': typeof WebsiteDonationIndexRoute
  '/dream': typeof WebsiteDreamIndexRoute
  '/event': typeof WebsiteEventIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof WebsiteIndexRoute
  '': typeof AdminConsoleRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/account': typeof AdminConsoleSettingsAccountRoute
  '/settings/appearance': typeof AdminConsoleSettingsAppearanceRoute
  '/settings/display': typeof AdminConsoleSettingsDisplayRoute
  '/settings/notifications': typeof AdminConsoleSettingsNotificationsRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/apps': typeof AdminConsoleAppsIndexRoute
  '/chats': typeof AdminConsoleChatsIndexRoute
  '/dashboard': typeof AdminConsoleDashboardIndexRoute
  '/help-center': typeof AdminConsoleHelpCenterIndexRoute
  '/settings': typeof AdminConsoleSettingsIndexRoute
  '/tasks': typeof AdminConsoleTasksIndexRoute
  '/users': typeof AdminConsoleUsersIndexRoute
  '/about': typeof WebsiteAboutIndexRoute
  '/blog': typeof WebsiteBlogIndexRoute
  '/donation': typeof WebsiteDonationIndexRoute
  '/dream': typeof WebsiteDreamIndexRoute
  '/event': typeof WebsiteEventIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authRouteRouteWithChildren
  '/_admin-console': typeof AdminConsoleRouteRouteWithChildren
  '/_website': typeof WebsiteRouteRouteWithChildren
  '/_admin-console/settings': typeof AdminConsoleSettingsRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_website/': typeof WebsiteIndexRoute
  '/_admin-console/settings/account': typeof AdminConsoleSettingsAccountRoute
  '/_admin-console/settings/appearance': typeof AdminConsoleSettingsAppearanceRoute
  '/_admin-console/settings/display': typeof AdminConsoleSettingsDisplayRoute
  '/_admin-console/settings/notifications': typeof AdminConsoleSettingsNotificationsRoute
  '/(auth)/sign-in/': typeof authSignInIndexRoute
  '/(auth)/sign-up/': typeof authSignUpIndexRoute
  '/_admin-console/apps/': typeof AdminConsoleAppsIndexRoute
  '/_admin-console/chats/': typeof AdminConsoleChatsIndexRoute
  '/_admin-console/dashboard/': typeof AdminConsoleDashboardIndexRoute
  '/_admin-console/help-center/': typeof AdminConsoleHelpCenterIndexRoute
  '/_admin-console/settings/': typeof AdminConsoleSettingsIndexRoute
  '/_admin-console/tasks/': typeof AdminConsoleTasksIndexRoute
  '/_admin-console/users/': typeof AdminConsoleUsersIndexRoute
  '/_website/about/': typeof WebsiteAboutIndexRoute
  '/_website/blog/': typeof WebsiteBlogIndexRoute
  '/_website/donation/': typeof WebsiteDonationIndexRoute
  '/_website/dream/': typeof WebsiteDreamIndexRoute
  '/_website/event/': typeof WebsiteEventIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/settings'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/sign-in'
    | '/sign-up'
    | '/apps'
    | '/chats'
    | '/dashboard'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/about'
    | '/blog'
    | '/donation'
    | '/dream'
    | '/event'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/sign-in'
    | '/sign-up'
    | '/apps'
    | '/chats'
    | '/dashboard'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/about'
    | '/blog'
    | '/donation'
    | '/dream'
    | '/event'
  id:
    | '__root__'
    | '/(auth)'
    | '/_admin-console'
    | '/_website'
    | '/_admin-console/settings'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_website/'
    | '/_admin-console/settings/account'
    | '/_admin-console/settings/appearance'
    | '/_admin-console/settings/display'
    | '/_admin-console/settings/notifications'
    | '/(auth)/sign-in/'
    | '/(auth)/sign-up/'
    | '/_admin-console/apps/'
    | '/_admin-console/chats/'
    | '/_admin-console/dashboard/'
    | '/_admin-console/help-center/'
    | '/_admin-console/settings/'
    | '/_admin-console/tasks/'
    | '/_admin-console/users/'
    | '/_website/about/'
    | '/_website/blog/'
    | '/_website/donation/'
    | '/_website/dream/'
    | '/_website/event/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AdminConsoleRouteRoute: typeof AdminConsoleRouteRouteWithChildren
  WebsiteRouteRoute: typeof WebsiteRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}
export interface FileServerRoutesByFullPath {
  '/api/wechat-work-code': typeof ApiWechatWorkCodeServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/wechat-work-code': typeof ApiWechatWorkCodeServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/wechat-work-code': typeof ApiWechatWorkCodeServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/wechat-work-code' | '/api/auth/$' | '/api/rpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/wechat-work-code' | '/api/auth/$' | '/api/rpc/$'
  id: '__root__' | '/api/wechat-work-code' | '/api/auth/$' | '/api/rpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiWechatWorkCodeServerRoute: typeof ApiWechatWorkCodeServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiRpcSplatServerRoute: typeof ApiRpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_website': {
      id: '/_website'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WebsiteRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin-console': {
      id: '/_admin-console'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminConsoleRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_website/': {
      id: '/_website/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof WebsiteIndexRouteImport
      parentRoute: typeof WebsiteRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin-console/settings': {
      id: '/_admin-console/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AdminConsoleSettingsRouteRouteImport
      parentRoute: typeof AdminConsoleRouteRoute
    }
    '/_website/event/': {
      id: '/_website/event/'
      path: '/event'
      fullPath: '/event'
      preLoaderRoute: typeof WebsiteEventIndexRouteImport
      parentRoute: typeof WebsiteRouteRoute
    }
    '/_website/dream/': {
      id: '/_website/dream/'
      path: '/dream'
      fullPath: '/dream'
      preLoaderRoute: typeof WebsiteDreamIndexRouteImport
      parentRoute: typeof WebsiteRouteRoute
    }
    '/_website/donation/': {
      id: '/_website/donation/'
      path: '/donation'
      fullPath: '/donation'
      preLoaderRoute: typeof WebsiteDonationIndexRouteImport
      parentRoute: typeof WebsiteRouteRoute
    }
    '/_website/blog/': {
      id: '/_website/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof WebsiteBlogIndexRouteImport
      parentRoute: typeof WebsiteRouteRoute
    }
    '/_website/about/': {
      id: '/_website/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof WebsiteAboutIndexRouteImport
      parentRoute: typeof WebsiteRouteRoute
    }
    '/_admin-console/users/': {
      id: '/_admin-console/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AdminConsoleUsersIndexRouteImport
      parentRoute: typeof AdminConsoleRouteRoute
    }
    '/_admin-console/tasks/': {
      id: '/_admin-console/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AdminConsoleTasksIndexRouteImport
      parentRoute: typeof AdminConsoleRouteRoute
    }
    '/_admin-console/settings/': {
      id: '/_admin-console/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AdminConsoleSettingsIndexRouteImport
      parentRoute: typeof AdminConsoleSettingsRouteRoute
    }
    '/_admin-console/help-center/': {
      id: '/_admin-console/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AdminConsoleHelpCenterIndexRouteImport
      parentRoute: typeof AdminConsoleRouteRoute
    }
    '/_admin-console/dashboard/': {
      id: '/_admin-console/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AdminConsoleDashboardIndexRouteImport
      parentRoute: typeof AdminConsoleRouteRoute
    }
    '/_admin-console/chats/': {
      id: '/_admin-console/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AdminConsoleChatsIndexRouteImport
      parentRoute: typeof AdminConsoleRouteRoute
    }
    '/_admin-console/apps/': {
      id: '/_admin-console/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AdminConsoleAppsIndexRouteImport
      parentRoute: typeof AdminConsoleRouteRoute
    }
    '/(auth)/sign-up/': {
      id: '/(auth)/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/sign-in/': {
      id: '/(auth)/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/_admin-console/settings/notifications': {
      id: '/_admin-console/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AdminConsoleSettingsNotificationsRouteImport
      parentRoute: typeof AdminConsoleSettingsRouteRoute
    }
    '/_admin-console/settings/display': {
      id: '/_admin-console/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AdminConsoleSettingsDisplayRouteImport
      parentRoute: typeof AdminConsoleSettingsRouteRoute
    }
    '/_admin-console/settings/appearance': {
      id: '/_admin-console/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AdminConsoleSettingsAppearanceRouteImport
      parentRoute: typeof AdminConsoleSettingsRouteRoute
    }
    '/_admin-console/settings/account': {
      id: '/_admin-console/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AdminConsoleSettingsAccountRouteImport
      parentRoute: typeof AdminConsoleSettingsRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/wechat-work-code': {
      id: '/api/wechat-work-code'
      path: '/api/wechat-work-code'
      fullPath: '/api/wechat-work-code'
      preLoaderRoute: typeof ApiWechatWorkCodeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface authRouteRouteChildren {
  authSignInIndexRoute: typeof authSignInIndexRoute
  authSignUpIndexRoute: typeof authSignUpIndexRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authSignInIndexRoute: authSignInIndexRoute,
  authSignUpIndexRoute: authSignUpIndexRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AdminConsoleSettingsRouteRouteChildren {
  AdminConsoleSettingsAccountRoute: typeof AdminConsoleSettingsAccountRoute
  AdminConsoleSettingsAppearanceRoute: typeof AdminConsoleSettingsAppearanceRoute
  AdminConsoleSettingsDisplayRoute: typeof AdminConsoleSettingsDisplayRoute
  AdminConsoleSettingsNotificationsRoute: typeof AdminConsoleSettingsNotificationsRoute
  AdminConsoleSettingsIndexRoute: typeof AdminConsoleSettingsIndexRoute
}

const AdminConsoleSettingsRouteRouteChildren: AdminConsoleSettingsRouteRouteChildren =
  {
    AdminConsoleSettingsAccountRoute: AdminConsoleSettingsAccountRoute,
    AdminConsoleSettingsAppearanceRoute: AdminConsoleSettingsAppearanceRoute,
    AdminConsoleSettingsDisplayRoute: AdminConsoleSettingsDisplayRoute,
    AdminConsoleSettingsNotificationsRoute:
      AdminConsoleSettingsNotificationsRoute,
    AdminConsoleSettingsIndexRoute: AdminConsoleSettingsIndexRoute,
  }

const AdminConsoleSettingsRouteRouteWithChildren =
  AdminConsoleSettingsRouteRoute._addFileChildren(
    AdminConsoleSettingsRouteRouteChildren,
  )

interface AdminConsoleRouteRouteChildren {
  AdminConsoleSettingsRouteRoute: typeof AdminConsoleSettingsRouteRouteWithChildren
  AdminConsoleAppsIndexRoute: typeof AdminConsoleAppsIndexRoute
  AdminConsoleChatsIndexRoute: typeof AdminConsoleChatsIndexRoute
  AdminConsoleDashboardIndexRoute: typeof AdminConsoleDashboardIndexRoute
  AdminConsoleHelpCenterIndexRoute: typeof AdminConsoleHelpCenterIndexRoute
  AdminConsoleTasksIndexRoute: typeof AdminConsoleTasksIndexRoute
  AdminConsoleUsersIndexRoute: typeof AdminConsoleUsersIndexRoute
}

const AdminConsoleRouteRouteChildren: AdminConsoleRouteRouteChildren = {
  AdminConsoleSettingsRouteRoute: AdminConsoleSettingsRouteRouteWithChildren,
  AdminConsoleAppsIndexRoute: AdminConsoleAppsIndexRoute,
  AdminConsoleChatsIndexRoute: AdminConsoleChatsIndexRoute,
  AdminConsoleDashboardIndexRoute: AdminConsoleDashboardIndexRoute,
  AdminConsoleHelpCenterIndexRoute: AdminConsoleHelpCenterIndexRoute,
  AdminConsoleTasksIndexRoute: AdminConsoleTasksIndexRoute,
  AdminConsoleUsersIndexRoute: AdminConsoleUsersIndexRoute,
}

const AdminConsoleRouteRouteWithChildren =
  AdminConsoleRouteRoute._addFileChildren(AdminConsoleRouteRouteChildren)

interface WebsiteRouteRouteChildren {
  WebsiteIndexRoute: typeof WebsiteIndexRoute
  WebsiteAboutIndexRoute: typeof WebsiteAboutIndexRoute
  WebsiteBlogIndexRoute: typeof WebsiteBlogIndexRoute
  WebsiteDonationIndexRoute: typeof WebsiteDonationIndexRoute
  WebsiteDreamIndexRoute: typeof WebsiteDreamIndexRoute
  WebsiteEventIndexRoute: typeof WebsiteEventIndexRoute
}

const WebsiteRouteRouteChildren: WebsiteRouteRouteChildren = {
  WebsiteIndexRoute: WebsiteIndexRoute,
  WebsiteAboutIndexRoute: WebsiteAboutIndexRoute,
  WebsiteBlogIndexRoute: WebsiteBlogIndexRoute,
  WebsiteDonationIndexRoute: WebsiteDonationIndexRoute,
  WebsiteDreamIndexRoute: WebsiteDreamIndexRoute,
  WebsiteEventIndexRoute: WebsiteEventIndexRoute,
}

const WebsiteRouteRouteWithChildren = WebsiteRouteRoute._addFileChildren(
  WebsiteRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AdminConsoleRouteRoute: AdminConsoleRouteRouteWithChildren,
  WebsiteRouteRoute: WebsiteRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiWechatWorkCodeServerRoute: ApiWechatWorkCodeServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiRpcSplatServerRoute: ApiRpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
