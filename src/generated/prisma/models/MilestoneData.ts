
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `MilestoneData` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model MilestoneData
 * 
 */
export type MilestoneDataModel = runtime.Types.Result.DefaultSelection<Prisma.$MilestoneDataPayload>

export type AggregateMilestoneData = {
  _count: MilestoneDataCountAggregateOutputType | null
  _avg: MilestoneDataAvgAggregateOutputType | null
  _sum: MilestoneDataSumAggregateOutputType | null
  _min: MilestoneDataMinAggregateOutputType | null
  _max: MilestoneDataMaxAggregateOutputType | null
}

export type MilestoneDataAvgAggregateOutputType = {
  id: number | null
  startYear: number | null
  studentCount: number | null
  cityCount: number | null
}

export type MilestoneDataSumAggregateOutputType = {
  id: number | null
  startYear: number | null
  studentCount: number | null
  cityCount: number | null
}

export type MilestoneDataMinAggregateOutputType = {
  id: number | null
  startYear: number | null
  studentCount: number | null
  cityCount: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MilestoneDataMaxAggregateOutputType = {
  id: number | null
  startYear: number | null
  studentCount: number | null
  cityCount: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MilestoneDataCountAggregateOutputType = {
  id: number
  startYear: number
  studentCount: number
  cityCount: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type MilestoneDataAvgAggregateInputType = {
  id?: true
  startYear?: true
  studentCount?: true
  cityCount?: true
}

export type MilestoneDataSumAggregateInputType = {
  id?: true
  startYear?: true
  studentCount?: true
  cityCount?: true
}

export type MilestoneDataMinAggregateInputType = {
  id?: true
  startYear?: true
  studentCount?: true
  cityCount?: true
  createdAt?: true
  updatedAt?: true
}

export type MilestoneDataMaxAggregateInputType = {
  id?: true
  startYear?: true
  studentCount?: true
  cityCount?: true
  createdAt?: true
  updatedAt?: true
}

export type MilestoneDataCountAggregateInputType = {
  id?: true
  startYear?: true
  studentCount?: true
  cityCount?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MilestoneDataAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MilestoneData to aggregate.
   */
  where?: Prisma.MilestoneDataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MilestoneData to fetch.
   */
  orderBy?: Prisma.MilestoneDataOrderByWithRelationInput | Prisma.MilestoneDataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MilestoneDataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MilestoneData from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MilestoneData.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned MilestoneData
  **/
  _count?: true | MilestoneDataCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MilestoneDataAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MilestoneDataSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MilestoneDataMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MilestoneDataMaxAggregateInputType
}

export type GetMilestoneDataAggregateType<T extends MilestoneDataAggregateArgs> = {
      [P in keyof T & keyof AggregateMilestoneData]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMilestoneData[P]>
    : Prisma.GetScalarType<T[P], AggregateMilestoneData[P]>
}




export type MilestoneDataGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MilestoneDataWhereInput
  orderBy?: Prisma.MilestoneDataOrderByWithAggregationInput | Prisma.MilestoneDataOrderByWithAggregationInput[]
  by: Prisma.MilestoneDataScalarFieldEnum[] | Prisma.MilestoneDataScalarFieldEnum
  having?: Prisma.MilestoneDataScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MilestoneDataCountAggregateInputType | true
  _avg?: MilestoneDataAvgAggregateInputType
  _sum?: MilestoneDataSumAggregateInputType
  _min?: MilestoneDataMinAggregateInputType
  _max?: MilestoneDataMaxAggregateInputType
}

export type MilestoneDataGroupByOutputType = {
  id: number
  startYear: number
  studentCount: number
  cityCount: number
  createdAt: Date
  updatedAt: Date
  _count: MilestoneDataCountAggregateOutputType | null
  _avg: MilestoneDataAvgAggregateOutputType | null
  _sum: MilestoneDataSumAggregateOutputType | null
  _min: MilestoneDataMinAggregateOutputType | null
  _max: MilestoneDataMaxAggregateOutputType | null
}

type GetMilestoneDataGroupByPayload<T extends MilestoneDataGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MilestoneDataGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MilestoneDataGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MilestoneDataGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MilestoneDataGroupByOutputType[P]>
      }
    >
  > 



export type MilestoneDataWhereInput = {
  AND?: Prisma.MilestoneDataWhereInput | Prisma.MilestoneDataWhereInput[]
  OR?: Prisma.MilestoneDataWhereInput[]
  NOT?: Prisma.MilestoneDataWhereInput | Prisma.MilestoneDataWhereInput[]
  id?: Prisma.IntFilter<"MilestoneData"> | number
  startYear?: Prisma.IntFilter<"MilestoneData"> | number
  studentCount?: Prisma.IntFilter<"MilestoneData"> | number
  cityCount?: Prisma.IntFilter<"MilestoneData"> | number
  createdAt?: Prisma.DateTimeFilter<"MilestoneData"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MilestoneData"> | Date | string
}

export type MilestoneDataOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  startYear?: Prisma.SortOrder
  studentCount?: Prisma.SortOrder
  cityCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MilestoneDataWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.MilestoneDataWhereInput | Prisma.MilestoneDataWhereInput[]
  OR?: Prisma.MilestoneDataWhereInput[]
  NOT?: Prisma.MilestoneDataWhereInput | Prisma.MilestoneDataWhereInput[]
  startYear?: Prisma.IntFilter<"MilestoneData"> | number
  studentCount?: Prisma.IntFilter<"MilestoneData"> | number
  cityCount?: Prisma.IntFilter<"MilestoneData"> | number
  createdAt?: Prisma.DateTimeFilter<"MilestoneData"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"MilestoneData"> | Date | string
}, "id">

export type MilestoneDataOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  startYear?: Prisma.SortOrder
  studentCount?: Prisma.SortOrder
  cityCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MilestoneDataCountOrderByAggregateInput
  _avg?: Prisma.MilestoneDataAvgOrderByAggregateInput
  _max?: Prisma.MilestoneDataMaxOrderByAggregateInput
  _min?: Prisma.MilestoneDataMinOrderByAggregateInput
  _sum?: Prisma.MilestoneDataSumOrderByAggregateInput
}

export type MilestoneDataScalarWhereWithAggregatesInput = {
  AND?: Prisma.MilestoneDataScalarWhereWithAggregatesInput | Prisma.MilestoneDataScalarWhereWithAggregatesInput[]
  OR?: Prisma.MilestoneDataScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MilestoneDataScalarWhereWithAggregatesInput | Prisma.MilestoneDataScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"MilestoneData"> | number
  startYear?: Prisma.IntWithAggregatesFilter<"MilestoneData"> | number
  studentCount?: Prisma.IntWithAggregatesFilter<"MilestoneData"> | number
  cityCount?: Prisma.IntWithAggregatesFilter<"MilestoneData"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"MilestoneData"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"MilestoneData"> | Date | string
}

export type MilestoneDataCreateInput = {
  startYear: number
  studentCount: number
  cityCount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MilestoneDataUncheckedCreateInput = {
  id?: number
  startYear: number
  studentCount: number
  cityCount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MilestoneDataUpdateInput = {
  startYear?: Prisma.IntFieldUpdateOperationsInput | number
  studentCount?: Prisma.IntFieldUpdateOperationsInput | number
  cityCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneDataUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  startYear?: Prisma.IntFieldUpdateOperationsInput | number
  studentCount?: Prisma.IntFieldUpdateOperationsInput | number
  cityCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneDataCreateManyInput = {
  id?: number
  startYear: number
  studentCount: number
  cityCount: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MilestoneDataUpdateManyMutationInput = {
  startYear?: Prisma.IntFieldUpdateOperationsInput | number
  studentCount?: Prisma.IntFieldUpdateOperationsInput | number
  cityCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneDataUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  startYear?: Prisma.IntFieldUpdateOperationsInput | number
  studentCount?: Prisma.IntFieldUpdateOperationsInput | number
  cityCount?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneDataCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startYear?: Prisma.SortOrder
  studentCount?: Prisma.SortOrder
  cityCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MilestoneDataAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startYear?: Prisma.SortOrder
  studentCount?: Prisma.SortOrder
  cityCount?: Prisma.SortOrder
}

export type MilestoneDataMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startYear?: Prisma.SortOrder
  studentCount?: Prisma.SortOrder
  cityCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MilestoneDataMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startYear?: Prisma.SortOrder
  studentCount?: Prisma.SortOrder
  cityCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MilestoneDataSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startYear?: Prisma.SortOrder
  studentCount?: Prisma.SortOrder
  cityCount?: Prisma.SortOrder
}



export type MilestoneDataSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startYear?: boolean
  studentCount?: boolean
  cityCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["milestoneData"]>

export type MilestoneDataSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startYear?: boolean
  studentCount?: boolean
  cityCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["milestoneData"]>

export type MilestoneDataSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startYear?: boolean
  studentCount?: boolean
  cityCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["milestoneData"]>

export type MilestoneDataSelectScalar = {
  id?: boolean
  startYear?: boolean
  studentCount?: boolean
  cityCount?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MilestoneDataOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "startYear" | "studentCount" | "cityCount" | "createdAt" | "updatedAt", ExtArgs["result"]["milestoneData"]>

export type $MilestoneDataPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "MilestoneData"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    startYear: number
    studentCount: number
    cityCount: number
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["milestoneData"]>
  composites: {}
}

export type MilestoneDataGetPayload<S extends boolean | null | undefined | MilestoneDataDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload, S>

export type MilestoneDataCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MilestoneDataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MilestoneDataCountAggregateInputType | true
  }

export interface MilestoneDataDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MilestoneData'], meta: { name: 'MilestoneData' } }
  /**
   * Find zero or one MilestoneData that matches the filter.
   * @param {MilestoneDataFindUniqueArgs} args - Arguments to find a MilestoneData
   * @example
   * // Get one MilestoneData
   * const milestoneData = await prisma.milestoneData.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MilestoneDataFindUniqueArgs>(args: Prisma.SelectSubset<T, MilestoneDataFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one MilestoneData that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MilestoneDataFindUniqueOrThrowArgs} args - Arguments to find a MilestoneData
   * @example
   * // Get one MilestoneData
   * const milestoneData = await prisma.milestoneData.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MilestoneDataFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MilestoneDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MilestoneData that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneDataFindFirstArgs} args - Arguments to find a MilestoneData
   * @example
   * // Get one MilestoneData
   * const milestoneData = await prisma.milestoneData.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MilestoneDataFindFirstArgs>(args?: Prisma.SelectSubset<T, MilestoneDataFindFirstArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first MilestoneData that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneDataFindFirstOrThrowArgs} args - Arguments to find a MilestoneData
   * @example
   * // Get one MilestoneData
   * const milestoneData = await prisma.milestoneData.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MilestoneDataFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MilestoneDataFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more MilestoneData that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneDataFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all MilestoneData
   * const milestoneData = await prisma.milestoneData.findMany()
   * 
   * // Get first 10 MilestoneData
   * const milestoneData = await prisma.milestoneData.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const milestoneDataWithIdOnly = await prisma.milestoneData.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MilestoneDataFindManyArgs>(args?: Prisma.SelectSubset<T, MilestoneDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a MilestoneData.
   * @param {MilestoneDataCreateArgs} args - Arguments to create a MilestoneData.
   * @example
   * // Create one MilestoneData
   * const MilestoneData = await prisma.milestoneData.create({
   *   data: {
   *     // ... data to create a MilestoneData
   *   }
   * })
   * 
   */
  create<T extends MilestoneDataCreateArgs>(args: Prisma.SelectSubset<T, MilestoneDataCreateArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many MilestoneData.
   * @param {MilestoneDataCreateManyArgs} args - Arguments to create many MilestoneData.
   * @example
   * // Create many MilestoneData
   * const milestoneData = await prisma.milestoneData.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MilestoneDataCreateManyArgs>(args?: Prisma.SelectSubset<T, MilestoneDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many MilestoneData and returns the data saved in the database.
   * @param {MilestoneDataCreateManyAndReturnArgs} args - Arguments to create many MilestoneData.
   * @example
   * // Create many MilestoneData
   * const milestoneData = await prisma.milestoneData.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many MilestoneData and only return the `id`
   * const milestoneDataWithIdOnly = await prisma.milestoneData.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MilestoneDataCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MilestoneDataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a MilestoneData.
   * @param {MilestoneDataDeleteArgs} args - Arguments to delete one MilestoneData.
   * @example
   * // Delete one MilestoneData
   * const MilestoneData = await prisma.milestoneData.delete({
   *   where: {
   *     // ... filter to delete one MilestoneData
   *   }
   * })
   * 
   */
  delete<T extends MilestoneDataDeleteArgs>(args: Prisma.SelectSubset<T, MilestoneDataDeleteArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one MilestoneData.
   * @param {MilestoneDataUpdateArgs} args - Arguments to update one MilestoneData.
   * @example
   * // Update one MilestoneData
   * const milestoneData = await prisma.milestoneData.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MilestoneDataUpdateArgs>(args: Prisma.SelectSubset<T, MilestoneDataUpdateArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more MilestoneData.
   * @param {MilestoneDataDeleteManyArgs} args - Arguments to filter MilestoneData to delete.
   * @example
   * // Delete a few MilestoneData
   * const { count } = await prisma.milestoneData.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MilestoneDataDeleteManyArgs>(args?: Prisma.SelectSubset<T, MilestoneDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MilestoneData.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneDataUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many MilestoneData
   * const milestoneData = await prisma.milestoneData.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MilestoneDataUpdateManyArgs>(args: Prisma.SelectSubset<T, MilestoneDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more MilestoneData and returns the data updated in the database.
   * @param {MilestoneDataUpdateManyAndReturnArgs} args - Arguments to update many MilestoneData.
   * @example
   * // Update many MilestoneData
   * const milestoneData = await prisma.milestoneData.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more MilestoneData and only return the `id`
   * const milestoneDataWithIdOnly = await prisma.milestoneData.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MilestoneDataUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MilestoneDataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one MilestoneData.
   * @param {MilestoneDataUpsertArgs} args - Arguments to update or create a MilestoneData.
   * @example
   * // Update or create a MilestoneData
   * const milestoneData = await prisma.milestoneData.upsert({
   *   create: {
   *     // ... data to create a MilestoneData
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the MilestoneData we want to update
   *   }
   * })
   */
  upsert<T extends MilestoneDataUpsertArgs>(args: Prisma.SelectSubset<T, MilestoneDataUpsertArgs<ExtArgs>>): Prisma.Prisma__MilestoneDataClient<runtime.Types.Result.GetResult<Prisma.$MilestoneDataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of MilestoneData.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneDataCountArgs} args - Arguments to filter MilestoneData to count.
   * @example
   * // Count the number of MilestoneData
   * const count = await prisma.milestoneData.count({
   *   where: {
   *     // ... the filter for the MilestoneData we want to count
   *   }
   * })
  **/
  count<T extends MilestoneDataCountArgs>(
    args?: Prisma.Subset<T, MilestoneDataCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MilestoneDataCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a MilestoneData.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MilestoneDataAggregateArgs>(args: Prisma.Subset<T, MilestoneDataAggregateArgs>): Prisma.PrismaPromise<GetMilestoneDataAggregateType<T>>

  /**
   * Group by MilestoneData.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneDataGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MilestoneDataGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MilestoneDataGroupByArgs['orderBy'] }
      : { orderBy?: MilestoneDataGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MilestoneDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMilestoneDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the MilestoneData model
 */
readonly fields: MilestoneDataFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for MilestoneData.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MilestoneDataClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the MilestoneData model
 */
export interface MilestoneDataFieldRefs {
  readonly id: Prisma.FieldRef<"MilestoneData", 'Int'>
  readonly startYear: Prisma.FieldRef<"MilestoneData", 'Int'>
  readonly studentCount: Prisma.FieldRef<"MilestoneData", 'Int'>
  readonly cityCount: Prisma.FieldRef<"MilestoneData", 'Int'>
  readonly createdAt: Prisma.FieldRef<"MilestoneData", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"MilestoneData", 'DateTime'>
}
    

// Custom InputTypes
/**
 * MilestoneData findUnique
 */
export type MilestoneDataFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * Filter, which MilestoneData to fetch.
   */
  where: Prisma.MilestoneDataWhereUniqueInput
}

/**
 * MilestoneData findUniqueOrThrow
 */
export type MilestoneDataFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * Filter, which MilestoneData to fetch.
   */
  where: Prisma.MilestoneDataWhereUniqueInput
}

/**
 * MilestoneData findFirst
 */
export type MilestoneDataFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * Filter, which MilestoneData to fetch.
   */
  where?: Prisma.MilestoneDataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MilestoneData to fetch.
   */
  orderBy?: Prisma.MilestoneDataOrderByWithRelationInput | Prisma.MilestoneDataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MilestoneData.
   */
  cursor?: Prisma.MilestoneDataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MilestoneData from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MilestoneData.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MilestoneData.
   */
  distinct?: Prisma.MilestoneDataScalarFieldEnum | Prisma.MilestoneDataScalarFieldEnum[]
}

/**
 * MilestoneData findFirstOrThrow
 */
export type MilestoneDataFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * Filter, which MilestoneData to fetch.
   */
  where?: Prisma.MilestoneDataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MilestoneData to fetch.
   */
  orderBy?: Prisma.MilestoneDataOrderByWithRelationInput | Prisma.MilestoneDataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for MilestoneData.
   */
  cursor?: Prisma.MilestoneDataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MilestoneData from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MilestoneData.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of MilestoneData.
   */
  distinct?: Prisma.MilestoneDataScalarFieldEnum | Prisma.MilestoneDataScalarFieldEnum[]
}

/**
 * MilestoneData findMany
 */
export type MilestoneDataFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * Filter, which MilestoneData to fetch.
   */
  where?: Prisma.MilestoneDataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of MilestoneData to fetch.
   */
  orderBy?: Prisma.MilestoneDataOrderByWithRelationInput | Prisma.MilestoneDataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing MilestoneData.
   */
  cursor?: Prisma.MilestoneDataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` MilestoneData from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` MilestoneData.
   */
  skip?: number
  distinct?: Prisma.MilestoneDataScalarFieldEnum | Prisma.MilestoneDataScalarFieldEnum[]
}

/**
 * MilestoneData create
 */
export type MilestoneDataCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * The data needed to create a MilestoneData.
   */
  data: Prisma.XOR<Prisma.MilestoneDataCreateInput, Prisma.MilestoneDataUncheckedCreateInput>
}

/**
 * MilestoneData createMany
 */
export type MilestoneDataCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many MilestoneData.
   */
  data: Prisma.MilestoneDataCreateManyInput | Prisma.MilestoneDataCreateManyInput[]
}

/**
 * MilestoneData createManyAndReturn
 */
export type MilestoneDataCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * The data used to create many MilestoneData.
   */
  data: Prisma.MilestoneDataCreateManyInput | Prisma.MilestoneDataCreateManyInput[]
}

/**
 * MilestoneData update
 */
export type MilestoneDataUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * The data needed to update a MilestoneData.
   */
  data: Prisma.XOR<Prisma.MilestoneDataUpdateInput, Prisma.MilestoneDataUncheckedUpdateInput>
  /**
   * Choose, which MilestoneData to update.
   */
  where: Prisma.MilestoneDataWhereUniqueInput
}

/**
 * MilestoneData updateMany
 */
export type MilestoneDataUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update MilestoneData.
   */
  data: Prisma.XOR<Prisma.MilestoneDataUpdateManyMutationInput, Prisma.MilestoneDataUncheckedUpdateManyInput>
  /**
   * Filter which MilestoneData to update
   */
  where?: Prisma.MilestoneDataWhereInput
  /**
   * Limit how many MilestoneData to update.
   */
  limit?: number
}

/**
 * MilestoneData updateManyAndReturn
 */
export type MilestoneDataUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * The data used to update MilestoneData.
   */
  data: Prisma.XOR<Prisma.MilestoneDataUpdateManyMutationInput, Prisma.MilestoneDataUncheckedUpdateManyInput>
  /**
   * Filter which MilestoneData to update
   */
  where?: Prisma.MilestoneDataWhereInput
  /**
   * Limit how many MilestoneData to update.
   */
  limit?: number
}

/**
 * MilestoneData upsert
 */
export type MilestoneDataUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * The filter to search for the MilestoneData to update in case it exists.
   */
  where: Prisma.MilestoneDataWhereUniqueInput
  /**
   * In case the MilestoneData found by the `where` argument doesn't exist, create a new MilestoneData with this data.
   */
  create: Prisma.XOR<Prisma.MilestoneDataCreateInput, Prisma.MilestoneDataUncheckedCreateInput>
  /**
   * In case the MilestoneData was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MilestoneDataUpdateInput, Prisma.MilestoneDataUncheckedUpdateInput>
}

/**
 * MilestoneData delete
 */
export type MilestoneDataDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
  /**
   * Filter which MilestoneData to delete.
   */
  where: Prisma.MilestoneDataWhereUniqueInput
}

/**
 * MilestoneData deleteMany
 */
export type MilestoneDataDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which MilestoneData to delete
   */
  where?: Prisma.MilestoneDataWhereInput
  /**
   * Limit how many MilestoneData to delete.
   */
  limit?: number
}

/**
 * MilestoneData without action
 */
export type MilestoneDataDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the MilestoneData
   */
  select?: Prisma.MilestoneDataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MilestoneData
   */
  omit?: Prisma.MilestoneDataOmit<ExtArgs> | null
}
